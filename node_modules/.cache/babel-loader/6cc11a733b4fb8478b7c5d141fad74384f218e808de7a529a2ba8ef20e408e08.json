{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Project\\\\Global-CO2-Emissions-w-Dashbaoard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Chart from './components/Chart';\nimport CountrySelector from './components/CountrySelector';\nimport PredictionChart from './components/PredictionChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [countries, setCountries] = useState([]);\n  const [selected, setSelected] = useState(\"Philippines\");\n  const [data, setData] = useState([]);\n  const [predicted, setPredicted] = useState([]);\n  useEffect(() => {\n    axios.get(\"http://localhost:8000/countries\").then(res => setCountries(res.data));\n  }, []);\n  useEffect(() => {\n    if (selected) {\n      axios.get(`http://localhost:8000/data/${selected}`).then(res => setData(res.data));\n      axios.get(`http://localhost:8000/predict/${selected}`).then(res => setPredicted(res.data));\n    }\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"\\uD83C\\uDF0D CO\\u2082 Emissions Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountrySelector, {\n      countries: countries,\n      selected: selected,\n      setSelected: setSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PredictionChart, {\n      data: predicted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rn7Z7oMWxrpV3QJKxsPbaKlp/ng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Chart","CountrySelector","PredictionChart","jsxDEV","_jsxDEV","App","_s","countries","setCountries","selected","setSelected","data","setData","predicted","setPredicted","get","then","res","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Github/Project/Global-CO2-Emissions-w-Dashbaoard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Chart from './components/Chart';\r\nimport CountrySelector from './components/CountrySelector';\r\nimport PredictionChart from './components/PredictionChart';\r\n\r\nfunction App() {\r\n  const [countries, setCountries] = useState([]);\r\n  const [selected, setSelected] = useState(\"Philippines\");\r\n  const [data, setData] = useState([]);\r\n  const [predicted, setPredicted] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/countries\").then(res => setCountries(res.data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selected) {\r\n      axios.get(`http://localhost:8000/data/${selected}`).then(res => setData(res.data));\r\n      axios.get(`http://localhost:8000/predict/${selected}`).then(res => setPredicted(res.data));\r\n    }\r\n  }, [selected]);\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h1 className=\"text-2xl font-bold\">üåç CO‚ÇÇ Emissions Dashboard</h1>\r\n      <CountrySelector countries={countries} selected={selected} setSelected={setSelected} />\r\n      <Chart data={data} />\r\n      <PredictionChart data={predicted} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,aAAa,CAAC;EACvD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACgB,GAAG,CAAC,iCAAiC,CAAC,CAACC,IAAI,CAACC,GAAG,IAAIT,YAAY,CAACS,GAAG,CAACN,IAAI,CAAC,CAAC;EAClF,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,EAAE;MACZV,KAAK,CAACgB,GAAG,CAAC,8BAA8BN,QAAQ,EAAE,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIL,OAAO,CAACK,GAAG,CAACN,IAAI,CAAC,CAAC;MAClFZ,KAAK,CAACgB,GAAG,CAAC,iCAAiCN,QAAQ,EAAE,CAAC,CAACO,IAAI,CAACC,GAAG,IAAIH,YAAY,CAACG,GAAG,CAACN,IAAI,CAAC,CAAC;IAC5F;EACF,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAIc,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClEnB,OAAA,CAACH,eAAe;MAACM,SAAS,EAAEA,SAAU;MAACE,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA;IAAY;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFnB,OAAA,CAACJ,KAAK;MAACW,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACrBnB,OAAA,CAACF,eAAe;MAACS,IAAI,EAAEE;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACjB,EAAA,CAzBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}